try {
    $BOSH_INSTALL_TARGET = Resolve-Path $env:BOSH_INSTALL_TARGET
} catch {
    $Host.UI.WriteErrorLine($_.Exception.Message)
    Exit 1
}

$env:GOROOT="C:\var\vcap\packages\golang-windows\go"
$env:GOPATH="${BOSH_INSTALL_TARGET}"
$env:PATH="${env:GOROOT}\bin;${env:PATH}"
$pkg_name="rep"
$pkg_path="code.cloudfoundry.org\rep\cmd\rep"

function CompileGo {
    go.exe build -o "${BOSH_INSTALL_TARGET}\${pkg_name}.exe" "${pkg_path}"
    $?
}

try
{
    # Create GOPATH
    New-Item -ItemType "directory" -Force "${BOSH_INSTALL_TARGET}/src"
    robocopy /E "${PWD}" "${BOSH_INSTALL_TARGET}/src"
    if ($LASTEXITCODE -ge 8) {
        Exit 1
    }

    if (-Not (CompileGo)) {
        $Host.UI.WriteErrorLine("Error compiling: ${pkg_path}")
        Exit 1
    }

    # Cleanup build artifacts
    Remove-Item -Force -Recurse "${BOSH_INSTALL_TARGET}/src"
}
catch
{
    $Host.UI.WriteErrorLine($_.Exception.Message)
    Exit 1
}

Exit 0
