#!/bin/bash -e

RUN_DIR=/var/vcap/sys/run/cc_uploader
LOG_DIR=/var/vcap/sys/log/cc_uploader
CONF_DIR=/var/vcap/jobs/cc_uploader/config

PIDFILE=$RUN_DIR/cc_uploader.pid

source /var/vcap/packages/pid_utils/pid_utils.sh

case $1 in

  start)
    pid_guard $PIDFILE "cc_uploader"

    mkdir -p $RUN_DIR
    chown -R vcap:vcap $RUN_DIR

    mkdir -p $LOG_DIR
    chown -R vcap:vcap $LOG_DIR

    echo $$ > $PIDFILE

    if running_in_container; then
        echo "Not setting /proc/sys/net/ipv4 parameters, since I'm running inside a linux container"
    else
        # TCP_FIN_TIMEOUT
        # This setting determines the time that must elapse before TCP/IP can release a closed connection and reuse
        # its resources. During this TIME_WAIT state, reopening the connection to the client costs less than establishing
        # a new connection. By reducing the value of this entry, TCP/IP can release closed connections faster, making more
        # resources available for new connections. Addjust this in the presense of many connections sitting in the
        # TIME_WAIT state:

        echo 10 > /proc/sys/net/ipv4/tcp_fin_timeout

        # TCP_TW_REUSE
        # This allows reusing sockets in TIME_WAIT state for new connections when it is safe from protocol viewpoint.
        # Default value is 0 (disabled). It is generally a safer alternative to tcp_tw_recycle

        echo 1 > /proc/sys/net/ipv4/tcp_tw_reuse
    fi

    # Allowed number of open file descriptors
    ulimit -n 100000

    # Work around for GOLANG 1.5.3 DNS bug
    export GODEBUG=netdns=cgo

    exec chpst -u vcap:vcap /var/vcap/packages/cc_uploader/bin/cc-uploader \
      -address=<%= p("diego.cc_uploader.listen_addr") %> \
      -debugAddr=<%= p("diego.cc_uploader.debug_addr") %> \
      -consulCluster=http://127.0.0.1:8500 \
      <% if_p("diego.cc_uploader.cc.job_polling_interval_in_seconds") do |interval| %>\
        -ccJobPollingInterval=<%= "#{interval}s" %> \
      <% end %>\
      -dropsondePort=<%= p("diego.cc_uploader.dropsonde_port") %> \
      -skipCertVerify=<%= p("diego.ssl.skip_cert_verify") %> \
      -logLevel=<%= p("diego.cc_uploader.log_level") %> \
      2> >(tee -a $LOG_DIR/cc_uploader.stderr.log | logger -p user.error -t vcap.cc-uploader) \
      1> >(tee -a $LOG_DIR/cc_uploader.stdout.log | logger -p user.info -t vcap.cc-uploader)

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;

  *)
    echo "Usage: cc_uploader_ctl {start|stop}"

    ;;

esac
